Grammar

    0 $accept: program $end

    1 program: statements_block

    2 statements_block: %empty
    3                 | statement_list

    4 statement_list: statement_item
    5               | statement_list SEMICOLON statement_item

    6 statement_item: declaration
    7               | assign_stmt
    8               | read_stmt
    9               | write_stmt
   10               | if_stmt
   11               | while_stmt
   12               | for_stmt
   13               | array_declaration
   14               | array_assign

   15 declaration: INT_KW ID ASSIGN expression
   16            | INT_KW ID
   17            | REAL_KW ID ASSIGN expression
   18            | REAL_KW ID
   19            | STRING_KW ID ASSIGN STRING_LITERAL
   20            | STRING_KW ID

   21 assign_stmt: ID ASSIGN expression

   22 read_stmt: READ_KW ID
   23          | READ_KW array_access

   24 write_stmt: WRITE_KW write_args

   25 write_item: expression

   26 write_args: write_item
   27           | write_args COMMA write_item

   28 if_stmt: IF_KW LPAREN logical_expression RPAREN THEN_KW statements_block else_part ENDIF_KW

   29 else_part: ELSE_KW statements_block
   30          | %empty

   31 while_stmt: WHILE_KW LPAREN logical_expression RPAREN DO_KW statements_block ENDWHILE_KW

   32 for_stmt: FOR_KW LPAREN assign_stmt SEMICOLON logical_expression SEMICOLON assign_stmt RPAREN DO_KW statements_block ENDFOR_KW

   33 array_declaration: ARRAY_KW INT_KW ID LBRACK expression RBRACK
   34                  | ARRAY_KW REAL_KW ID LBRACK expression RBRACK
   35                  | ARRAY_KW STRING_KW ID LBRACK expression RBRACK

   36 array_access: ID LBRACK expression RBRACK

   37 array_assign: ID LBRACK expression RBRACK ASSIGN expression

   38 expression: expression ADD expression
   39           | expression SUB expression
   40           | expression MUL expression
   41           | expression DIV expression
   42           | SUB factor
   43           | factor

   44 factor: INT_LITERAL
   45       | REAL_LITERAL
   46       | STRING_LITERAL
   47       | ID
   48       | array_access
   49       | LPAREN expression RPAREN
   50       | FUNC_SQRT LPAREN expression RPAREN
   51       | FUNC_ABS LPAREN expression RPAREN

   52 logical_expression: expression GT expression
   53                   | expression LT expression
   54                   | expression NE expression
   55                   | expression EQ expression
   56                   | expression GE expression
   57                   | expression LE expression
   58                   | logical_expression OR logical_expression
   59                   | logical_expression AND logical_expression
   60                   | LPAREN logical_expression RPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT_KW (258) 15 16 33
    REAL_KW (259) 17 18 34
    STRING_KW (260) 19 20 35
    ARRAY_KW (261) 33 34 35
    IF_KW (262) 28
    THEN_KW (263) 28
    ELSE_KW (264) 29
    ENDIF_KW (265) 28
    WHILE_KW (266) 31
    DO_KW (267) 31 32
    ENDWHILE_KW (268) 31
    FOR_KW (269) 32
    ENDFOR_KW (270) 32
    READ_KW (271) 22 23
    WRITE_KW (272) 24
    FUNC_SQRT (273) 50
    FUNC_ABS (274) 51
    INT_LITERAL <ival> (275) 44
    REAL_LITERAL <rval> (276) 45
    STRING_LITERAL <sval> (277) 19 46
    ID <sval> (278) 15 16 17 18 19 20 21 22 33 34 35 36 37 47
    ADD (279) 38
    SUB (280) 39 42
    MUL (281) 40
    DIV (282) 41
    GT (283) 52
    LT (284) 53
    NE (285) 54
    EQ (286) 55
    GE (287) 56
    LE (288) 57
    OR (289) 58
    AND (290) 59
    ASSIGN (291) 15 17 19 21 37
    LPAREN (292) 28 31 32 49 50 51 60
    RPAREN (293) 28 31 32 49 50 51 60
    LBRACK (294) 33 34 35 36 37
    RBRACK (295) 33 34 35 36 37
    SEMICOLON (296) 5 32
    COMMA (297) 27
    UMINUS (298)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program <node> (45)
        on left: 1
        on right: 0
    statements_block <node> (46)
        on left: 2 3
        on right: 1 28 29 31 32
    statement_list <node> (47)
        on left: 4 5
        on right: 3 5
    statement_item <node> (48)
        on left: 6 7 8 9 10 11 12 13 14
        on right: 4 5
    declaration <node> (49)
        on left: 15 16 17 18 19 20
        on right: 6
    assign_stmt <node> (50)
        on left: 21
        on right: 7 32
    read_stmt <node> (51)
        on left: 22 23
        on right: 8
    write_stmt <node> (52)
        on left: 24
        on right: 9
    write_item <node> (53)
        on left: 25
        on right: 26 27
    write_args <node> (54)
        on left: 26 27
        on right: 24 27
    if_stmt <node> (55)
        on left: 28
        on right: 10
    else_part <node> (56)
        on left: 29 30
        on right: 28
    while_stmt <node> (57)
        on left: 31
        on right: 11
    for_stmt <node> (58)
        on left: 32
        on right: 12
    array_declaration <node> (59)
        on left: 33 34 35
        on right: 13
    array_access <node> (60)
        on left: 36
        on right: 23 48
    array_assign <node> (61)
        on left: 37
        on right: 14
    expression <node> (62)
        on left: 38 39 40 41 42 43
        on right: 15 17 21 25 33 34 35 36 37 38 39 40 41 49 50 51 52 53 54 55 56 57
    factor <node> (63)
        on left: 44 45 46 47 48 49 50 51
        on right: 42 43
    logical_expression <node> (64)
        on left: 52 53 54 55 56 57 58 59 60
        on right: 28 31 32 58 59 60


State 0

    0 $accept: . program $end

    INT_KW     shift, and go to state 1
    REAL_KW    shift, and go to state 2
    STRING_KW  shift, and go to state 3
    ARRAY_KW   shift, and go to state 4
    IF_KW      shift, and go to state 5
    WHILE_KW   shift, and go to state 6
    FOR_KW     shift, and go to state 7
    READ_KW    shift, and go to state 8
    WRITE_KW   shift, and go to state 9
    ID         shift, and go to state 10

    $default  reduce using rule 2 (statements_block)

    program            go to state 11
    statements_block   go to state 12
    statement_list     go to state 13
    statement_item     go to state 14
    declaration        go to state 15
    assign_stmt        go to state 16
    read_stmt          go to state 17
    write_stmt         go to state 18
    if_stmt            go to state 19
    while_stmt         go to state 20
    for_stmt           go to state 21
    array_declaration  go to state 22
    array_assign       go to state 23


State 1

   15 declaration: INT_KW . ID ASSIGN expression
   16            | INT_KW . ID

    ID  shift, and go to state 24


State 2

   17 declaration: REAL_KW . ID ASSIGN expression
   18            | REAL_KW . ID

    ID  shift, and go to state 25


State 3

   19 declaration: STRING_KW . ID ASSIGN STRING_LITERAL
   20            | STRING_KW . ID

    ID  shift, and go to state 26


State 4

   33 array_declaration: ARRAY_KW . INT_KW ID LBRACK expression RBRACK
   34                  | ARRAY_KW . REAL_KW ID LBRACK expression RBRACK
   35                  | ARRAY_KW . STRING_KW ID LBRACK expression RBRACK

    INT_KW     shift, and go to state 27
    REAL_KW    shift, and go to state 28
    STRING_KW  shift, and go to state 29


State 5

   28 if_stmt: IF_KW . LPAREN logical_expression RPAREN THEN_KW statements_block else_part ENDIF_KW

    LPAREN  shift, and go to state 30


State 6

   31 while_stmt: WHILE_KW . LPAREN logical_expression RPAREN DO_KW statements_block ENDWHILE_KW

    LPAREN  shift, and go to state 31


State 7

   32 for_stmt: FOR_KW . LPAREN assign_stmt SEMICOLON logical_expression SEMICOLON assign_stmt RPAREN DO_KW statements_block ENDFOR_KW

    LPAREN  shift, and go to state 32


State 8

   22 read_stmt: READ_KW . ID
   23          | READ_KW . array_access

    ID  shift, and go to state 33

    array_access  go to state 34


State 9

   24 write_stmt: WRITE_KW . write_args

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    write_item    go to state 43
    write_args    go to state 44
    array_access  go to state 45
    expression    go to state 46
    factor        go to state 47


State 10

   21 assign_stmt: ID . ASSIGN expression
   37 array_assign: ID . LBRACK expression RBRACK ASSIGN expression

    ASSIGN  shift, and go to state 48
    LBRACK  shift, and go to state 49


State 11

    0 $accept: program . $end

    $end  shift, and go to state 50


State 12

    1 program: statements_block .

    $default  reduce using rule 1 (program)


State 13

    3 statements_block: statement_list .
    5 statement_list: statement_list . SEMICOLON statement_item

    SEMICOLON  shift, and go to state 51

    $default  reduce using rule 3 (statements_block)


State 14

    4 statement_list: statement_item .

    $default  reduce using rule 4 (statement_list)


State 15

    6 statement_item: declaration .

    $default  reduce using rule 6 (statement_item)


State 16

    7 statement_item: assign_stmt .

    $default  reduce using rule 7 (statement_item)


State 17

    8 statement_item: read_stmt .

    $default  reduce using rule 8 (statement_item)


State 18

    9 statement_item: write_stmt .

    $default  reduce using rule 9 (statement_item)


State 19

   10 statement_item: if_stmt .

    $default  reduce using rule 10 (statement_item)


State 20

   11 statement_item: while_stmt .

    $default  reduce using rule 11 (statement_item)


State 21

   12 statement_item: for_stmt .

    $default  reduce using rule 12 (statement_item)


State 22

   13 statement_item: array_declaration .

    $default  reduce using rule 13 (statement_item)


State 23

   14 statement_item: array_assign .

    $default  reduce using rule 14 (statement_item)


State 24

   15 declaration: INT_KW ID . ASSIGN expression
   16            | INT_KW ID .

    ASSIGN  shift, and go to state 52

    $default  reduce using rule 16 (declaration)


State 25

   17 declaration: REAL_KW ID . ASSIGN expression
   18            | REAL_KW ID .

    ASSIGN  shift, and go to state 53

    $default  reduce using rule 18 (declaration)


State 26

   19 declaration: STRING_KW ID . ASSIGN STRING_LITERAL
   20            | STRING_KW ID .

    ASSIGN  shift, and go to state 54

    $default  reduce using rule 20 (declaration)


State 27

   33 array_declaration: ARRAY_KW INT_KW . ID LBRACK expression RBRACK

    ID  shift, and go to state 55


State 28

   34 array_declaration: ARRAY_KW REAL_KW . ID LBRACK expression RBRACK

    ID  shift, and go to state 56


State 29

   35 array_declaration: ARRAY_KW STRING_KW . ID LBRACK expression RBRACK

    ID  shift, and go to state 57


State 30

   28 if_stmt: IF_KW LPAREN . logical_expression RPAREN THEN_KW statements_block else_part ENDIF_KW

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 58

    array_access        go to state 45
    expression          go to state 59
    factor              go to state 47
    logical_expression  go to state 60


State 31

   31 while_stmt: WHILE_KW LPAREN . logical_expression RPAREN DO_KW statements_block ENDWHILE_KW

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 58

    array_access        go to state 45
    expression          go to state 59
    factor              go to state 47
    logical_expression  go to state 61


State 32

   32 for_stmt: FOR_KW LPAREN . assign_stmt SEMICOLON logical_expression SEMICOLON assign_stmt RPAREN DO_KW statements_block ENDFOR_KW

    ID  shift, and go to state 62

    assign_stmt  go to state 63


State 33

   22 read_stmt: READ_KW ID .
   36 array_access: ID . LBRACK expression RBRACK

    LBRACK  shift, and go to state 64

    $default  reduce using rule 22 (read_stmt)


State 34

   23 read_stmt: READ_KW array_access .

    $default  reduce using rule 23 (read_stmt)


State 35

   50 factor: FUNC_SQRT . LPAREN expression RPAREN

    LPAREN  shift, and go to state 65


State 36

   51 factor: FUNC_ABS . LPAREN expression RPAREN

    LPAREN  shift, and go to state 66


State 37

   44 factor: INT_LITERAL .

    $default  reduce using rule 44 (factor)


State 38

   45 factor: REAL_LITERAL .

    $default  reduce using rule 45 (factor)


State 39

   46 factor: STRING_LITERAL .

    $default  reduce using rule 46 (factor)


State 40

   36 array_access: ID . LBRACK expression RBRACK
   47 factor: ID .

    LBRACK  shift, and go to state 64

    $default  reduce using rule 47 (factor)


State 41

   42 expression: SUB . factor

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    factor        go to state 67


State 42

   49 factor: LPAREN . expression RPAREN

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 68
    factor        go to state 47


State 43

   26 write_args: write_item .

    $default  reduce using rule 26 (write_args)


State 44

   24 write_stmt: WRITE_KW write_args .
   27 write_args: write_args . COMMA write_item

    COMMA  shift, and go to state 69

    $default  reduce using rule 24 (write_stmt)


State 45

   48 factor: array_access .

    $default  reduce using rule 48 (factor)


State 46

   25 write_item: expression .
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73

    $default  reduce using rule 25 (write_item)


State 47

   43 expression: factor .

    $default  reduce using rule 43 (expression)


State 48

   21 assign_stmt: ID ASSIGN . expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 74
    factor        go to state 47


State 49

   37 array_assign: ID LBRACK . expression RBRACK ASSIGN expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 75
    factor        go to state 47


State 50

    0 $accept: program $end .

    $default  accept


State 51

    5 statement_list: statement_list SEMICOLON . statement_item

    INT_KW     shift, and go to state 1
    REAL_KW    shift, and go to state 2
    STRING_KW  shift, and go to state 3
    ARRAY_KW   shift, and go to state 4
    IF_KW      shift, and go to state 5
    WHILE_KW   shift, and go to state 6
    FOR_KW     shift, and go to state 7
    READ_KW    shift, and go to state 8
    WRITE_KW   shift, and go to state 9
    ID         shift, and go to state 10

    statement_item     go to state 76
    declaration        go to state 15
    assign_stmt        go to state 16
    read_stmt          go to state 17
    write_stmt         go to state 18
    if_stmt            go to state 19
    while_stmt         go to state 20
    for_stmt           go to state 21
    array_declaration  go to state 22
    array_assign       go to state 23


State 52

   15 declaration: INT_KW ID ASSIGN . expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 77
    factor        go to state 47


State 53

   17 declaration: REAL_KW ID ASSIGN . expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 78
    factor        go to state 47


State 54

   19 declaration: STRING_KW ID ASSIGN . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 79


State 55

   33 array_declaration: ARRAY_KW INT_KW ID . LBRACK expression RBRACK

    LBRACK  shift, and go to state 80


State 56

   34 array_declaration: ARRAY_KW REAL_KW ID . LBRACK expression RBRACK

    LBRACK  shift, and go to state 81


State 57

   35 array_declaration: ARRAY_KW STRING_KW ID . LBRACK expression RBRACK

    LBRACK  shift, and go to state 82


State 58

   49 factor: LPAREN . expression RPAREN
   60 logical_expression: LPAREN . logical_expression RPAREN

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 58

    array_access        go to state 45
    expression          go to state 83
    factor              go to state 47
    logical_expression  go to state 84


State 59

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   52 logical_expression: expression . GT expression
   53                   | expression . LT expression
   54                   | expression . NE expression
   55                   | expression . EQ expression
   56                   | expression . GE expression
   57                   | expression . LE expression

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73
    GT   shift, and go to state 85
    LT   shift, and go to state 86
    NE   shift, and go to state 87
    EQ   shift, and go to state 88
    GE   shift, and go to state 89
    LE   shift, and go to state 90


State 60

   28 if_stmt: IF_KW LPAREN logical_expression . RPAREN THEN_KW statements_block else_part ENDIF_KW
   58 logical_expression: logical_expression . OR logical_expression
   59                   | logical_expression . AND logical_expression

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    RPAREN  shift, and go to state 93


State 61

   31 while_stmt: WHILE_KW LPAREN logical_expression . RPAREN DO_KW statements_block ENDWHILE_KW
   58 logical_expression: logical_expression . OR logical_expression
   59                   | logical_expression . AND logical_expression

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    RPAREN  shift, and go to state 94


State 62

   21 assign_stmt: ID . ASSIGN expression

    ASSIGN  shift, and go to state 48


State 63

   32 for_stmt: FOR_KW LPAREN assign_stmt . SEMICOLON logical_expression SEMICOLON assign_stmt RPAREN DO_KW statements_block ENDFOR_KW

    SEMICOLON  shift, and go to state 95


State 64

   36 array_access: ID LBRACK . expression RBRACK

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 96
    factor        go to state 47


State 65

   50 factor: FUNC_SQRT LPAREN . expression RPAREN

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 97
    factor        go to state 47


State 66

   51 factor: FUNC_ABS LPAREN . expression RPAREN

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 98
    factor        go to state 47


State 67

   42 expression: SUB factor .

    $default  reduce using rule 42 (expression)


State 68

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   49 factor: LPAREN expression . RPAREN

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    RPAREN  shift, and go to state 99


State 69

   27 write_args: write_args COMMA . write_item

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    write_item    go to state 100
    array_access  go to state 45
    expression    go to state 46
    factor        go to state 47


State 70

   38 expression: expression ADD . expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 101
    factor        go to state 47


State 71

   39 expression: expression SUB . expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 102
    factor        go to state 47


State 72

   40 expression: expression MUL . expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 103
    factor        go to state 47


State 73

   41 expression: expression DIV . expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 104
    factor        go to state 47


State 74

   21 assign_stmt: ID ASSIGN expression .
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73

    $default  reduce using rule 21 (assign_stmt)


State 75

   37 array_assign: ID LBRACK expression . RBRACK ASSIGN expression
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    RBRACK  shift, and go to state 105


State 76

    5 statement_list: statement_list SEMICOLON statement_item .

    $default  reduce using rule 5 (statement_list)


State 77

   15 declaration: INT_KW ID ASSIGN expression .
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73

    $default  reduce using rule 15 (declaration)


State 78

   17 declaration: REAL_KW ID ASSIGN expression .
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73

    $default  reduce using rule 17 (declaration)


State 79

   19 declaration: STRING_KW ID ASSIGN STRING_LITERAL .

    $default  reduce using rule 19 (declaration)


State 80

   33 array_declaration: ARRAY_KW INT_KW ID LBRACK . expression RBRACK

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 106
    factor        go to state 47


State 81

   34 array_declaration: ARRAY_KW REAL_KW ID LBRACK . expression RBRACK

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 107
    factor        go to state 47


State 82

   35 array_declaration: ARRAY_KW STRING_KW ID LBRACK . expression RBRACK

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 108
    factor        go to state 47


State 83

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   49 factor: LPAREN expression . RPAREN
   52 logical_expression: expression . GT expression
   53                   | expression . LT expression
   54                   | expression . NE expression
   55                   | expression . EQ expression
   56                   | expression . GE expression
   57                   | expression . LE expression

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    GT      shift, and go to state 85
    LT      shift, and go to state 86
    NE      shift, and go to state 87
    EQ      shift, and go to state 88
    GE      shift, and go to state 89
    LE      shift, and go to state 90
    RPAREN  shift, and go to state 99


State 84

   58 logical_expression: logical_expression . OR logical_expression
   59                   | logical_expression . AND logical_expression
   60                   | LPAREN logical_expression . RPAREN

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    RPAREN  shift, and go to state 109


State 85

   52 logical_expression: expression GT . expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 110
    factor        go to state 47


State 86

   53 logical_expression: expression LT . expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 111
    factor        go to state 47


State 87

   54 logical_expression: expression NE . expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 112
    factor        go to state 47


State 88

   55 logical_expression: expression EQ . expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 113
    factor        go to state 47


State 89

   56 logical_expression: expression GE . expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 114
    factor        go to state 47


State 90

   57 logical_expression: expression LE . expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 115
    factor        go to state 47


State 91

   58 logical_expression: logical_expression OR . logical_expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 58

    array_access        go to state 45
    expression          go to state 59
    factor              go to state 47
    logical_expression  go to state 116


State 92

   59 logical_expression: logical_expression AND . logical_expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 58

    array_access        go to state 45
    expression          go to state 59
    factor              go to state 47
    logical_expression  go to state 117


State 93

   28 if_stmt: IF_KW LPAREN logical_expression RPAREN . THEN_KW statements_block else_part ENDIF_KW

    THEN_KW  shift, and go to state 118


State 94

   31 while_stmt: WHILE_KW LPAREN logical_expression RPAREN . DO_KW statements_block ENDWHILE_KW

    DO_KW  shift, and go to state 119


State 95

   32 for_stmt: FOR_KW LPAREN assign_stmt SEMICOLON . logical_expression SEMICOLON assign_stmt RPAREN DO_KW statements_block ENDFOR_KW

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 58

    array_access        go to state 45
    expression          go to state 59
    factor              go to state 47
    logical_expression  go to state 120


State 96

   36 array_access: ID LBRACK expression . RBRACK
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    RBRACK  shift, and go to state 121


State 97

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   50 factor: FUNC_SQRT LPAREN expression . RPAREN

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    RPAREN  shift, and go to state 122


State 98

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   51 factor: FUNC_ABS LPAREN expression . RPAREN

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    RPAREN  shift, and go to state 123


State 99

   49 factor: LPAREN expression RPAREN .

    $default  reduce using rule 49 (factor)


State 100

   27 write_args: write_args COMMA write_item .

    $default  reduce using rule 27 (write_args)


State 101

   38 expression: expression . ADD expression
   38           | expression ADD expression .
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    MUL  shift, and go to state 72
    DIV  shift, and go to state 73

    $default  reduce using rule 38 (expression)


State 102

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   39           | expression SUB expression .
   40           | expression . MUL expression
   41           | expression . DIV expression

    MUL  shift, and go to state 72
    DIV  shift, and go to state 73

    $default  reduce using rule 39 (expression)


State 103

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   40           | expression MUL expression .
   41           | expression . DIV expression

    $default  reduce using rule 40 (expression)


State 104

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   41           | expression DIV expression .

    $default  reduce using rule 41 (expression)


State 105

   37 array_assign: ID LBRACK expression RBRACK . ASSIGN expression

    ASSIGN  shift, and go to state 124


State 106

   33 array_declaration: ARRAY_KW INT_KW ID LBRACK expression . RBRACK
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    RBRACK  shift, and go to state 125


State 107

   34 array_declaration: ARRAY_KW REAL_KW ID LBRACK expression . RBRACK
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    RBRACK  shift, and go to state 126


State 108

   35 array_declaration: ARRAY_KW STRING_KW ID LBRACK expression . RBRACK
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    RBRACK  shift, and go to state 127


State 109

   60 logical_expression: LPAREN logical_expression RPAREN .

    $default  reduce using rule 60 (logical_expression)


State 110

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   52 logical_expression: expression GT expression .

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73

    $default  reduce using rule 52 (logical_expression)


State 111

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   53 logical_expression: expression LT expression .

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73

    $default  reduce using rule 53 (logical_expression)


State 112

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   54 logical_expression: expression NE expression .

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73

    $default  reduce using rule 54 (logical_expression)


State 113

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   55 logical_expression: expression EQ expression .

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73

    $default  reduce using rule 55 (logical_expression)


State 114

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   56 logical_expression: expression GE expression .

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73

    $default  reduce using rule 56 (logical_expression)


State 115

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   57 logical_expression: expression LE expression .

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73

    $default  reduce using rule 57 (logical_expression)


State 116

   58 logical_expression: logical_expression . OR logical_expression
   58                   | logical_expression OR logical_expression .
   59                   | logical_expression . AND logical_expression

    AND  shift, and go to state 92

    $default  reduce using rule 58 (logical_expression)


State 117

   58 logical_expression: logical_expression . OR logical_expression
   59                   | logical_expression . AND logical_expression
   59                   | logical_expression AND logical_expression .

    $default  reduce using rule 59 (logical_expression)


State 118

   28 if_stmt: IF_KW LPAREN logical_expression RPAREN THEN_KW . statements_block else_part ENDIF_KW

    INT_KW     shift, and go to state 1
    REAL_KW    shift, and go to state 2
    STRING_KW  shift, and go to state 3
    ARRAY_KW   shift, and go to state 4
    IF_KW      shift, and go to state 5
    WHILE_KW   shift, and go to state 6
    FOR_KW     shift, and go to state 7
    READ_KW    shift, and go to state 8
    WRITE_KW   shift, and go to state 9
    ID         shift, and go to state 10

    $default  reduce using rule 2 (statements_block)

    statements_block   go to state 128
    statement_list     go to state 13
    statement_item     go to state 14
    declaration        go to state 15
    assign_stmt        go to state 16
    read_stmt          go to state 17
    write_stmt         go to state 18
    if_stmt            go to state 19
    while_stmt         go to state 20
    for_stmt           go to state 21
    array_declaration  go to state 22
    array_assign       go to state 23


State 119

   31 while_stmt: WHILE_KW LPAREN logical_expression RPAREN DO_KW . statements_block ENDWHILE_KW

    INT_KW     shift, and go to state 1
    REAL_KW    shift, and go to state 2
    STRING_KW  shift, and go to state 3
    ARRAY_KW   shift, and go to state 4
    IF_KW      shift, and go to state 5
    WHILE_KW   shift, and go to state 6
    FOR_KW     shift, and go to state 7
    READ_KW    shift, and go to state 8
    WRITE_KW   shift, and go to state 9
    ID         shift, and go to state 10

    $default  reduce using rule 2 (statements_block)

    statements_block   go to state 129
    statement_list     go to state 13
    statement_item     go to state 14
    declaration        go to state 15
    assign_stmt        go to state 16
    read_stmt          go to state 17
    write_stmt         go to state 18
    if_stmt            go to state 19
    while_stmt         go to state 20
    for_stmt           go to state 21
    array_declaration  go to state 22
    array_assign       go to state 23


State 120

   32 for_stmt: FOR_KW LPAREN assign_stmt SEMICOLON logical_expression . SEMICOLON assign_stmt RPAREN DO_KW statements_block ENDFOR_KW
   58 logical_expression: logical_expression . OR logical_expression
   59                   | logical_expression . AND logical_expression

    OR         shift, and go to state 91
    AND        shift, and go to state 92
    SEMICOLON  shift, and go to state 130


State 121

   36 array_access: ID LBRACK expression RBRACK .

    $default  reduce using rule 36 (array_access)


State 122

   50 factor: FUNC_SQRT LPAREN expression RPAREN .

    $default  reduce using rule 50 (factor)


State 123

   51 factor: FUNC_ABS LPAREN expression RPAREN .

    $default  reduce using rule 51 (factor)


State 124

   37 array_assign: ID LBRACK expression RBRACK ASSIGN . expression

    FUNC_SQRT       shift, and go to state 35
    FUNC_ABS        shift, and go to state 36
    INT_LITERAL     shift, and go to state 37
    REAL_LITERAL    shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    ID              shift, and go to state 40
    SUB             shift, and go to state 41
    LPAREN          shift, and go to state 42

    array_access  go to state 45
    expression    go to state 131
    factor        go to state 47


State 125

   33 array_declaration: ARRAY_KW INT_KW ID LBRACK expression RBRACK .

    $default  reduce using rule 33 (array_declaration)


State 126

   34 array_declaration: ARRAY_KW REAL_KW ID LBRACK expression RBRACK .

    $default  reduce using rule 34 (array_declaration)


State 127

   35 array_declaration: ARRAY_KW STRING_KW ID LBRACK expression RBRACK .

    $default  reduce using rule 35 (array_declaration)


State 128

   28 if_stmt: IF_KW LPAREN logical_expression RPAREN THEN_KW statements_block . else_part ENDIF_KW

    ELSE_KW  shift, and go to state 132

    $default  reduce using rule 30 (else_part)

    else_part  go to state 133


State 129

   31 while_stmt: WHILE_KW LPAREN logical_expression RPAREN DO_KW statements_block . ENDWHILE_KW

    ENDWHILE_KW  shift, and go to state 134


State 130

   32 for_stmt: FOR_KW LPAREN assign_stmt SEMICOLON logical_expression SEMICOLON . assign_stmt RPAREN DO_KW statements_block ENDFOR_KW

    ID  shift, and go to state 62

    assign_stmt  go to state 135


State 131

   37 array_assign: ID LBRACK expression RBRACK ASSIGN expression .
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73

    $default  reduce using rule 37 (array_assign)


State 132

   29 else_part: ELSE_KW . statements_block

    INT_KW     shift, and go to state 1
    REAL_KW    shift, and go to state 2
    STRING_KW  shift, and go to state 3
    ARRAY_KW   shift, and go to state 4
    IF_KW      shift, and go to state 5
    WHILE_KW   shift, and go to state 6
    FOR_KW     shift, and go to state 7
    READ_KW    shift, and go to state 8
    WRITE_KW   shift, and go to state 9
    ID         shift, and go to state 10

    $default  reduce using rule 2 (statements_block)

    statements_block   go to state 136
    statement_list     go to state 13
    statement_item     go to state 14
    declaration        go to state 15
    assign_stmt        go to state 16
    read_stmt          go to state 17
    write_stmt         go to state 18
    if_stmt            go to state 19
    while_stmt         go to state 20
    for_stmt           go to state 21
    array_declaration  go to state 22
    array_assign       go to state 23


State 133

   28 if_stmt: IF_KW LPAREN logical_expression RPAREN THEN_KW statements_block else_part . ENDIF_KW

    ENDIF_KW  shift, and go to state 137


State 134

   31 while_stmt: WHILE_KW LPAREN logical_expression RPAREN DO_KW statements_block ENDWHILE_KW .

    $default  reduce using rule 31 (while_stmt)


State 135

   32 for_stmt: FOR_KW LPAREN assign_stmt SEMICOLON logical_expression SEMICOLON assign_stmt . RPAREN DO_KW statements_block ENDFOR_KW

    RPAREN  shift, and go to state 138


State 136

   29 else_part: ELSE_KW statements_block .

    $default  reduce using rule 29 (else_part)


State 137

   28 if_stmt: IF_KW LPAREN logical_expression RPAREN THEN_KW statements_block else_part ENDIF_KW .

    $default  reduce using rule 28 (if_stmt)


State 138

   32 for_stmt: FOR_KW LPAREN assign_stmt SEMICOLON logical_expression SEMICOLON assign_stmt RPAREN . DO_KW statements_block ENDFOR_KW

    DO_KW  shift, and go to state 139


State 139

   32 for_stmt: FOR_KW LPAREN assign_stmt SEMICOLON logical_expression SEMICOLON assign_stmt RPAREN DO_KW . statements_block ENDFOR_KW

    INT_KW     shift, and go to state 1
    REAL_KW    shift, and go to state 2
    STRING_KW  shift, and go to state 3
    ARRAY_KW   shift, and go to state 4
    IF_KW      shift, and go to state 5
    WHILE_KW   shift, and go to state 6
    FOR_KW     shift, and go to state 7
    READ_KW    shift, and go to state 8
    WRITE_KW   shift, and go to state 9
    ID         shift, and go to state 10

    $default  reduce using rule 2 (statements_block)

    statements_block   go to state 140
    statement_list     go to state 13
    statement_item     go to state 14
    declaration        go to state 15
    assign_stmt        go to state 16
    read_stmt          go to state 17
    write_stmt         go to state 18
    if_stmt            go to state 19
    while_stmt         go to state 20
    for_stmt           go to state 21
    array_declaration  go to state 22
    array_assign       go to state 23


State 140

   32 for_stmt: FOR_KW LPAREN assign_stmt SEMICOLON logical_expression SEMICOLON assign_stmt RPAREN DO_KW statements_block . ENDFOR_KW

    ENDFOR_KW  shift, and go to state 141


State 141

   32 for_stmt: FOR_KW LPAREN assign_stmt SEMICOLON logical_expression SEMICOLON assign_stmt RPAREN DO_KW statements_block ENDFOR_KW .

    $default  reduce using rule 32 (for_stmt)
